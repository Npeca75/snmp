#!/bin/bash
#/*
# *
# * LibreNMS Proxmox VM info discovery agent for Linux / Proxmox
# *
# * @package    LibreNMS
# * @link       https://www.librenms.org
# *
# * @author     Peca Nesovanovic <peca.nesovanovic@sattrakt.com>
# * @copyright  2023 Peca Nesovanovic
# */
#
# Usage:
# /etc/crontab
# */6 * * * * root /etc/snmp/proxmox_vminfo -u
# /etc/snmp/snmpd
# extend proxmox_vminfo /etc/snmp/proxmox_vminfo

source /etc/snmp/snmp.data
mkdir -p "${TMPDIR}"
FILE="${TMPDIR}/out_proxmox_vminfo"
DFILE="${TMPDIR}/dbg_proxmox_vminfo"

date +%X > $DFILE
echo "$1" >> $DFILE

[ -z "$1" ] && {
    cat $FILE
    exit
}

CLUSTER=$(hostname -f)
if [ -f "/etc/pve/corosync.conf" ]; then
    CLUSTER=$(grep cluster_name /etc/pve/corosync.conf|cut -d':' -f2|xargs)
fi


ERRSTR=
which jq > /dev/null
ERRNR="$?"
if [ "$ERRNR" != 0 ]; then
    ERRSTR="JQ missing"
    JSONROW="[]"
else
    #shellcheck disable=SC2162
    while read -a VMDATA; do
        CONF=$(qm config "${VMDATA[0]}" | xargs)
        S=$(echo "$CONF"|grep -oE "sockets:\s[0-9]+" | cut -d':' -f2|xargs)
        C=$(echo "$CONF"|grep -oE "cores:\s[0-9]+" | cut -d':' -f2|xargs)
        OS=$(echo "$CONF"|grep -oE "ostype:\s\S+\s" | cut -d':' -f2|xargs)
        VCPU=$(( S * C ))
        ROW="{\"type\":\"qemu\",\"id\":\"${VMDATA[0]}\",\"name\":\"${VMDATA[1]}\",\"os\":\"${OS}\",\"ram\":\"${VMDATA[3]}\",\"vcpu\":\"${VCPU}\",\"status\":\"${VMDATA[2]}\"}"
        if [ -n "$JSONROW" ]; then
            JSONROW=${JSONROW}","
        fi
        JSONROW=${JSONROW}${ROW}
    done < <(qm list --full| awk '{$1=$1};1'|tail -n +2)

    #shellcheck disable=SC2162
    while read -a VMDATA; do
        CONF=$(pct config "${VMDATA[0]}" | xargs)
        VCPU=$(echo "$CONF"|grep -oE "cores:\s[0-9]+" | cut -d':' -f2|xargs)
        OS=$(echo "$CONF"|grep -oE "ostype:\s\S+\s" | cut -d':' -f2|xargs)
        RAM=$(echo "$CONF"|grep -oE "memory:\s\S+\s" | cut -d':' -f2|xargs)
        ROW="{\"type\":\"lxc\",\"id\":\"${VMDATA[0]}\",\"name\":\"${VMDATA[2]}\",\"os\":\"${OS}\",\"ram\":\"${RAM}\",\"vcpu\":\"${VCPU}\",\"status\":\"${VMDATA[1]}\"}"
        if [ -n "$JSONROW" ]; then
            JSONROW=${JSONROW}","
        fi
        JSONROW=${JSONROW}${ROW}
    done < <(pct list | awk '{$1=$1};1'|tail -n +2)
fi


JSONSTART='{"version":"1","cluster":"'${CLUSTER}'","data":['
JSONEND='],"error":"'${ERRNR}'","errorString":"'${ERRSTR}'"}'
echo "${JSONSTART}${JSONROW}${JSONEND}" > $FILE
chmod 644 ${FILE}
